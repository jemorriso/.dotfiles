{
  :devices {
            :macbook-keyboard [{:product_id 1452 :vendor_id 835}]
            }

  ;; can't get key chords to work with simlayer or layer

  ;; this is in the examples but not in the tutorial
  :layers {
              ;; tried using space but got too many mishits
              ;;:tab-mode {:key :tab}
              ;;:open_bracket-mode {:key :open_bracket}
              }

  ;; tried to do simlayer on caps_lock -> esc key but it doesn't seem to work either with caps_lock or esc
  ;; simlayer works better for keys that you press quickly - e.g. for spacebar - not getting any mishits now
  :simlayers {
              :space-mode {:key :spacebar}
              :c-mode {:key :c}
              :m-mode {:key :m}
              }
  :main [

         ;; need ## so that it works when other modifiers also applied
         {:des   "caps_lock to esc when pressed alone, to ctrl as modifier"
         :rules [[:##caps_lock :left_control nil {:alone :escape}]]}

         ;; can't do :!TOS because it expects a name to apply the modifiers to ðŸ˜©
         ;; i thought i needeed to put `##` on RHS to pass through command for hyper, but it works without
         {:des   "right command to meh"
         :rules [[:##right_command :!TOleft_shift]]}

         {:des   "right option to hyper"
         :rules [[:##right_option :!CTOleft_shift]]}

         {:des   "open bracket to backspace"
         :rules [[:open_bracket :delete_or_backspace]]}

         ;; only way I found to map multiple keys to "same" layer is duplicating the mapped keys
         ;; don't know why it doesn't work
         ;;{:des "tab-mode navo
          ;;:rules [
                  ;;[:s :left_arrow [:tab-mode :open_bracket-mode]] 
                  ;;[:f :down_arrow [:tab-mode :open_bracket-mode]] 
                  ;;[:d :up_arrow [:tab-mode :open_bracket-mode]] 
                  ;;[:g :right_arrow [:tab-mode :open_bracket-mode]] 

                  ;;[:e :home [:tab-mode :open_bracket-mode]] 
                  ;;[:r :end [:tab-mode :open_bracket-mode]] 
                  ;;[:t :page_down [:tab-mode :open_bracket-mode]] 
                  ;;[:w :page_up [:tab-mode :open_bracket-mode]] 
                  ;;[:spacebar :return_or_enter [:tab-mode :open_bracket-mode]] 
                  ;]}

         {:des "space-mode"
           :rules [:space-mode
                   [:caps_lock :!Sgrave_accent_and_tilde] 
                   [:a :grave_accent_and_tilde] 
                   [:s :left_arrow] 
                   [:f :down_arrow] 
                   [:d :up_arrow] 
                   [:g :right_arrow] 
         
                   [:e :home] 
                   [:r :end] 
                   [:t :page_down] 
                   [:w :page_up] 
                   
                   [:x :delete_forward] 
                   [:c :return_or_enter] 
                   [:v :hyphen] 
                   [:b :!Shyphen] 

                   [:y :!Sbackslash] 
                   [:u :backslash] 
                   [:i :!S9] 
                   [:o :!S0] 
                   [:open_bracket :delete_or_backspace] 
                   [:close_bracket :delete_forward] 

                   [:j :open_bracket] 
                   [:k :!Sopen_bracket] 
                   [:l :!Sclose_bracket] 
                   [:semicolon :close_bracket] 

                   [:n :!Sequal_sign] 
                   [:m :equal_sign] 
                   [:comma :!Scomma] 
                   [:period :!Speriod] 
                   ]}

          {:des "c-mode shift",
           :rules [:c-mode
                   [:grave_accent_and_tilde :!Sgrave_accent_and_tilde] 
                   [:hyphen :!Shyphen] 
                   [:equal_sign :!Sequal_sign] 
                   [:open_bracket :!Sopen_bracket]
                   [:close_bracket :!Sclose_bracket]
                   [:backslash :!Sbackslash] 
                   [:semicolon :!Ssemicolon]
                   [:quote :!Squote]
                   [:comma :!Scomma]
                   [:period :!Speriod]
                   [:slash :!Sslash]
                   [:a :!Sa]
                   [:b :!Sb]
                   ;;[:c :!Sc]
                   [:d :!Sd]
                   [:e :!Se]
                   [:f :!Sf]
                   [:g :!Sg]
                   [:h :!Sh]
                   [:i :!Si]
                   [:j :!Sj]
                   [:k :!Sk]
                   [:l :!Sl]
                   [:m :!Sm]
                   [:n :!Sn]
                   [:o :!So]
                   [:p :!Sp]
                   [:q :!Sq]
                   [:r :!Sr]
                   [:s :!Ss]
                   [:t :!St]
                   [:u :!Su]
                   [:v :!Sv]
                   [:w :!Sw]
                   [:x :!Sx]
                   [:y :!Sy]
                   [:z :!Sz]
                   [:1 :!S1]
                   [:2 :!S2]
                   [:3 :!S3]
                   [:4 :!S4]
                   [:5 :!S5]
                   [:6 :!S6]
                   [:7 :!S7]
                   [:8 :!S8]
                   [:9 :!S9]
                   [:0 :!S0]]}

          {:des "m-mode shift",
           :rules [:m-mode
                   [:grave_accent_and_tilde :!Sgrave_accent_and_tilde] 
                   [:hyphen :!Shyphen] 
                   [:equal_sign :!Sequal_sign] 
                   [:open_bracket :!Sopen_bracket]
                   [:close_bracket :!Sclose_bracket]
                   [:backslash :!Sbackslash] 
                   [:semicolon :!Ssemicolon]
                   [:quote :!Squote]
                   [:comma :!Scomma]
                   [:period :!Speriod]
                   [:slash :!Sslash]
                   [:a :!Sa]
                   [:b :!Sb]
                   [:c :!Sc]
                   [:d :!Sd]
                   [:e :!Se]
                   [:f :!Sf]
                   [:g :!Sg]
                   [:h :!Sh]
                   [:i :!Si]
                   [:j :!Sj]
                   [:k :!Sk]
                   [:l :!Sl]
                   ;;[:m :!Sm]
                   [:n :!Sn]
                   [:o :!So]
                   [:p :!Sp]
                   [:q :!Sq]
                   [:r :!Sr]
                   [:s :!Ss]
                   [:t :!St]
                   [:u :!Su]
                   [:v :!Sv]
                   [:w :!Sw]
                   [:x :!Sx]
                   [:y :!Sy]
                   [:z :!Sz]
                   [:1 :!S1]
                   [:2 :!S2]
                   [:3 :!S3]
                   [:4 :!S4]
                   [:5 :!S5]
                   [:6 :!S6]
                   [:7 :!S7]
                   [:8 :!S8]
                   [:9 :!S9]
                   [:0 :!S0]]}

         ; from this article: https://kau.sh/blog/hacking-your-keyboard/
         ; space cadet brackets
          {:des "left shift once -> ["
           :rules [
             [:##left_shift :left_shift nil {:alone :open_bracket} ]
           ]}

          {:des "right shift once -> ]"
           :rules [
             [:##right_shift :right_shift nil {:alone :close_bracket} ]
           ]}
         ]
}

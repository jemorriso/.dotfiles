(defsrc
  esc           f1            f2            f3            f4            f5            f6            f7            f8            f9            f10           f11           f12
  grv           1             2             3             4             5             6             7             8             9             0             -             =             bspc
  tab           q             w             e             r             t             y             u             i             o             p             [             ]             \
  caps          a             s             d             f             g             h             j             k             l             ;             '             ret
  lsft          z             x             c             v             b             n             m             ,             .             /             rsft          up
  fn            lctl          lalt          lmet          spc           rmet          ralt          left          down          rght
)
(deffakekeys
  fk_to_base (layer-switch base)
  persist_arrows (one-shot 500 (layer-while-held smart_arrows))
  persist_num (one-shot 500 (layer-while-held smart_num))
)
(defalias
  ___ XX

  meh (multi lctl lalt lsft)
  hyp (multi lctl lalt lsft lmet)

  to_base (layer-switch base)
  to_alt_tab (layer-switch alt_tab)

  l_space (layer-while-held space)
  l_space_lsym (layer-while-held space_left_sym)
  l_smart_space (layer-while-held smart_space)
  l_arrows (layer-while-held smart_arrows)
  l_smart_num (layer-while-held smart_num)
  l_smart_num_sft (layer-while-held smart_num_shifted)
  l_smart_num_space_lsym (layer-while-held smart_num_space_lsym)
  l_fn (layer-while-held function)
  l_media (layer-while-held media)

  stky_space (one-shot 500 @l_space)
  ;; spc_space (tap-hold-release 200 200 spc @l_space)
  ;; stky_sft_met (tap-hold-release 200 200 (one-shot 500 lsft) lmet)
  stky_space_lsym (one-shot 500 @l_space_lsym)
  stky_smart_space (tap-hold-release 200 200 (one-shot 500 @l_smart_space) @l_space)

  sft_tab_med (tap-hold-release 200 200 S-tab @l_media)

  bspc_space (tap-hold-release 200 200 bspc @l_space)
  ;; bspc_meh (tap-hold-release 200 200 bspc @meh)
  ;; stky_space_lsym_hyp (tap-hold-release 200 200 @stky_space_lsym @hyp)
  
  alt_tab_multi (multi @to_alt_tab M-bspc)  
)
(defalias
  ;; home-row mod quick typing aliases

  ;; alias to cancel tap-hold keys if typing rapidly but restore after a short idle period
  type (multi
    (layer-switch base_typing)
    (on-idle-fakekey fk_to_base tap 100)
  )

  ms_q (multi q @type)
  ms_f_comb (chord combos f)
  ms_w_comb (chord combos w)
  ms_p (multi p @type)
  ms_b (multi b @type)

  ms_l (multi l @type)
  ms_j (multi j @type)
  ms_u_comb (chord combos u)
  ms_y_comb (chord combos y)
  ms_; (multi ; @type)

  ;; ms_bspc_meh (multi @bspc_meh @type)
  ;; ms_bspc (multi bspc @type)
  ms_bspc_space (tap-hold-release 200 200 (multi bspc @type) @l_space)
  ms_a_sft (tap-hold-release 200 200 (multi a @type) lsft)
  ms_r_comb (chord combos r)
  ms_s_comb (chord combos s)
  ms_t_comb (chord combos t)
  ;; ms_t_met (tap-hold-release 200 200 (multi t @type) lmet)
  ms_g (multi g @type)

  ms_m (multi m @type)
  ms_n_met (tap-hold-release 200 200 (multi n @type) lmet)
  ms_e_comb (chord combos e)
  ms_i_comb (chord combos i)
  ms_o_sft (tap-hold-release 200 200 (multi o @type) lsft)
  ms_' (multi ' @type)

  ms_z (multi z @type)
  ms_x (multi x @type)
  ms_c (multi c @type)
  ms_d (multi d @type)
  ms_v (multi v @type)

  ms_k (multi k @type)
  ms_h (multi h @type)
  ms_, (multi , @type)
  ms_. (multi . @type)

  ;; ms_spc_space (tap-hold-release 200 200 (multi spc @type) @l_space)
  ms_spc_alt (tap-hold-release 200 200 (multi spc @type) lalt)
)
(defalias
  ;; thumb tap-hold mod cluster
  spc_alt (tap-hold-release 200 200 spc lalt)
  ;; stky_smart_space_ctl (tap-hold-release 200 200 @stky_smart_space lctl)
  tab_ctl (tap-hold-release 200 200 tab lctl)
  sft_td (tap-dance 200 ((one-shot 500 lsft) (caps-word 2000)))
  ;; stky_smart_space_met (tap-hold-release 200 200 @stky_smart_space lmet)
  ret_met (tap-hold-release 200 200 ret lmet)
)
(defalias
  ;; shifted character aliases
  rpar S-0
  ! S-1
  @ S-2
  # S-3
  $ S-4
  % S-5
  ^ S-6
  & S-7
  * S-8
  lpar S-9

  ~ S-`
  { S-[
  } S-]
  | S-\
  _ S--
  + S-=
  < S-,
  > S-.
  ? S-/
  : S-;
)
(defchords combos 30 
  (w) (tap-hold-release 200 200 (multi w @type) @hyp)
  (f) (tap-hold-release 200 200 (multi f @type) @meh)
  (u) (tap-hold-release 200 200 (multi u @type) @meh)
  (y) (tap-hold-release 200 200 (multi y @type) @hyp)

  (r) (tap-hold-release 200 200 (multi r @type) lctl)
  (s) (tap-hold-release 200 200 (multi s @type) lalt)
  (t) (tap-hold-release 200 200 (multi t @type) lmet)

  (e) (tap-hold-release 200 200 (multi e @type) lalt)
  (i) (tap-hold-release 200 200 (multi i @type) lctl)

  (r s) (tap-hold-release 200 200 M-spc (multi lctl lalt)) 
  (r t) (tap-hold-release 200 200 XX  (multi lctl lmet)) 
  (s t) (tap-hold-release 200 200 A-C-S-r (multi lalt lmet)) 
  (r s t) (tap-hold-release 200 200 XX  (multi lctl lalt lmet)) 
)
(deflayer base
  @___          XX            @___          @alt_tab_multi XX           XX            XX            XX            XX            [             ]             XX            XX
  @___          `             @ms_q         @ms_w_comb    @ms_f_comb    @ms_p         @ms_b         @ms_j         @ms_l         @ms_u_comb    @ms_y_comb    @ms_;         -             =
  esc           @ms_a_sft     @ms_r_comb    @ms_s_comb    @ms_t_comb    @ms_g         XX            @ms_m         @ms_n_met     @ms_e_comb    @ms_i_comb    @ms_o_sft     @ms_'         XX
  @___          @ms_z         @ms_x         @ms_c         @ms_d         @ms_v         XX            @ms_k         @ms_h         @ms_,         @ms_.         /             \  
  XX            @sft_tab_med  @stky_smart_space @ms_spc_alt @tab_ctl    @meh          @hyp          @ret_met      @sft_td       @stky_smart_space @l_fn     XX            XX            
  @___          XX            XX            @___          @ms_bspc_space @stky_space_lsym @___      XX            XX            XX            
)
(deflayer base_typing
  XX            XX            XX            @alt_tab_multi XX           XX            XX            XX            XX            [             ]             XX            XX
  XX            `             q             w             f             p             b             j             l             u             y             ;             -             =
  esc           a             r             s             t             g             XX            m             n             e             i             o             '             XX
  XX            z             x             c             d             v             XX            k             h             ,             .             /             \             
  XX            @sft_tab_med  @stky_smart_space @spc_alt  @tab_ctl      @meh          @hyp          @ret_met      @sft_td       @stky_smart_space @l_fn     XX            XX            
  XX            XX            XX            XX            @bspc_space   @stky_space_lsym XX         XX            XX            XX            
)
(defalias
  0_sft (tap-hold-release 200 200 0 lsft)
  4_ctl (tap-hold-release 200 200 4 lctl)
  5_alt (tap-hold-release 200 200 5 lalt)
  6_met (tap-hold-release 200 200 6 lmet)
  7_hyp (tap-hold-release 200 200 7 @hyp)
  8_meh (tap-hold-release 200 200 8 @meh)

  down_met (tap-hold-release-timeout 200 200 down lmet down)
  up_alt (tap-hold-release-timeout 200 200 up lalt up)
  rght_sft (tap-hold-release-timeout 200 200 rght lsft rght)
)
(deflayer space
  _             _             _             _             _             _             _             _             _             @lpar         @rpar         _             _             
  _             _             _             @7_hyp        @8_meh        9             _             _             _             _             _             _             _             _
  _             @0_sft        @4_ctl        @5_alt        @6_met        _             _             left          @down_met     @up_alt       @rght_sft     _             _             _
  _             _             1             2             3             _             _             home          pgdn          pgup          end           _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             del           _             _             _             _             _
)
(defalias
  fk_num (on-release-fakekey persist_num tap)
  fk_arrows (on-release-fakekey persist_arrows tap)

  num_0 (multi @fk_num 0)
  num_1 (multi @fk_num 1)
  num_2 (multi @fk_num 2)
  num_3 (multi @fk_num 3)
  num_4 (multi @fk_num 4)
  num_5 (multi @fk_num 5)
  num_6 (multi @fk_num 6)
  num_7 (multi @fk_num 7)
  num_8 (multi @fk_num 8)
  num_9 (multi @fk_num 9)

  num_0_sft (tap-hold-release 200 200 @num_0 lsft)
  num_4_ctl (tap-hold-release 200 200 @num_4 lctl)
  num_5_alt (tap-hold-release 200 200 @num_5 lalt)
  num_6_met (tap-hold-release 200 200 @num_6 lmet)
  num_7_hyp (tap-hold-release 200 200 @num_7 @hyp)
  num_8_meh (tap-hold-release 200 200 @num_8 @meh)

  arr_left (multi @fk_arrows left)
  arr_down (multi @fk_arrows down)
  arr_up (multi @fk_arrows up)
  arr_rght (multi @fk_arrows rght)

  arr_down_met (tap-hold-release-timeout 200 200 @arr_down lmet down)
  arr_up_alt (tap-hold-release-timeout 200 200 @arr_up lalt down)
  arr_rght_sft (tap-hold-release-timeout 200 200 @arr_rght lsft down)

)
(deflayer smart_space
  _             _             _             _             _             _             _             _             _             @lpar         @rpar         _             _             
  _             _             _             @num_7_hyp    @num_8_meh    @num_9        _             _             _             _             _             _             _             _
  _             @num_0_sft    @num_4_ctl    @num_5_alt    @num_6_met    _             _             @arr_left     @arr_down_met @arr_up_alt   @arr_rght_sft _             _             _
  _             _             @num_1        @num_2        @num_3        _             _             home          pgdn          pgup          end           _             _
  _             _             @to_base      _             _             _             _             _             _             @to_base      _             _             _
  _             _             _             _             del           _             _             _             _             _
)
(defalias
  $_ctl (tap-hold-release 200 200 @$ lctl)
  %_alt (tap-hold-release 200 200 @% lalt)
  ^_met (tap-hold-release 200 200 @^ lmet)
  &_hyp (tap-hold-release 200 200 @& @hyp)
  *_meh (tap-hold-release 200 200 @* @meh)
)
(deflayer space_left_sym
  _             _             _             _             _             _             _             _             _             @lpar         @rpar         _             _             
  _             _             _             @&_hyp        @*_meh        _             _             _             _             _             _             _             _             _
  _             _             @$_ctl        @%_alt        @^_met        _             _             @arr_left     @arr_down_met @arr_up_alt   @arr_rght_sft _             _             _
  _             _             @!            @@            @#            _             _             home          pgdn          pgup          end           _             _
  _             _             _             _             _             _             _             _             _             del           _             _             _
  _             _             _             _             del           _             _             _             _             _
)
(deflayer function
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             f12           f7            f8           f9             _             _             _             _             _             _             _             _
  _             f10           f4            f5            f6            _             _             _             _             _             _             _             _             _
  _             f11           f1            f2            f3            _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _
)
(deflayer media
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             prev          vold          volu          next          _             _             _
  _             _             _             _             _             _             _             mute          brdn          brup          pp            _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _
)
(defalias
  stky_smart_num_sft (multi (one-shot 500 lsft) (one-shot 500 @l_smart_num_sft))
  stky_smart_num_space_lsym (one-shot 500 @l_smart_num_space_lsym)

  num_bspc (multi @fk_num bspc)
  num_del (multi @fk_num del)

  num_/ (multi @fk_num /)
  num_, (multi @fk_num ,)
  num_. (multi @fk_num .)
  num_; (multi @fk_num ;)
  num_[ (multi @fk_num [)
  num_] (multi @fk_num ])
  num_- (multi @fk_num -)
  num_= (multi @fk_num =)

  num_lpar (multi @fk_num (macro 10 @lpar))
  num_rpar (multi @fk_num (macro 10 @rpar))
  num_+ (multi @fk_num (macro 10 @+))
  num__ (multi @fk_num (macro 10 @_ ))
  num_< (multi @fk_num (macro 10 @<))
  num_> (multi @fk_num (macro 10 @>))
  num_{ (multi @fk_num (macro 10 @{))
  num_} (multi @fk_num (macro 10 @}))
  num_? (multi @fk_num (macro 10 @?))
  num_: (multi @fk_num (macro 10 @:))

  num_* (multi @fk_num (macro 10 @*))
)
(deflayer smart_num
  _             _             _             _             _             _             _             _             _             @num_[        @num_]        _             _
  _             _             _             @num_7        @num_8        @num_9        _             _             _             _             _             @num_;        @num_-        @num_=
  _             @num_0        @num_4        @num_5        @num_6        _             _             _             _             _             _             _             _             _
  _             _             @num_1        @num_2        @num_3        _             _             _             _             @num_,        @num_.        @num_/        _
  _             _             @to_base      _             _             _             _             _             @stky_smart_num_sft @to_base _            _             _
  _             _             _             _             @num_bspc     @stky_smart_num_space_lsym _ _            _             _       
)
(deflayer smart_num_shifted
  _             _             _             _             _             _             _             _             _             @num_{        @num_}        _             _
  _             _             _             _             _             _             _             _             _             _             _             @num_:        @num__        @num_+
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             @num_<        @num_>        @num_?        _
  _             _             @to_base      _             _             _             _             _             _             @to_base      _             _             _
  _             _             _             _             _             _             _             _             _             _
)
(deflayer smart_num_space_lsym
  _             _             _             _             _             _             _             _             _             @num_lpar     @num_rpar     _             _
  _             _             _             _             @num_*        _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             @to_base      _             _             _             _             _             _             @to_base      _             _             _
  _             _             _             _             _             _             _             _             _             _
)
(deflayer smart_arrows
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             @arr_left     @arr_down     @arr_up       @arr_rght     _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             @to_base      _             _             _             _             _             _             @to_base      _             _             _
  _             _             _             _             _             _             _             _             _             _
)
(defalias
  at_esc (multi @to_base esc)
  at_off (multi @to_base spc)
)
(deflayer alt_tab
  @at_off       @at_off       left          rght          @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off
  @at_off       @at_off       q             w             f             @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off
  @at_esc       @at_off       @at_off       s             @at_off       @at_off       @at_off       left          down          up            rght          @at_off       @at_off       @at_off
  @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off
  @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off
  @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off       @at_off
)
(deflayer empty
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _             _             _             _
  _             _             _             _             _             _             _             _             _             _
)

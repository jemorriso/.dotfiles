;; modified from `kmonad/keymap/template/apple.kbd`

(defcfg
  input (iokit-name)
  output (kext)
  fallthrough true
)

(defsrc
  esc      f1       f2       f3       f4       f5       f6       f7       f8       f9       f10      f11      f12
  grv      1        2        3        4        5        6        7        8        9        0        -        =        bspc
  tab      q        w        e        r        t        y        u        i        o        p        [        ]        \
  caps     a        s        d        f        g        h        j        k        l        ;        '        ret
  lsft     z        x        c        v        b        n        m        ,        .        /        rsft     up
  fn       lctl     lalt     lmet              spc               rmet     ralt     left     down     rght
)

(defalias 
    ;; -------------------------------------------------- 
    ;; define layer toggles and sticky layers
    ;; -------------------------------------------------- 
    bas (layer-toggle base)
    dir (layer-toggle directory)
    dirt (layer-toggle directory_toggle)
    nf (layer-toggle num_func)
    p1 (layer-toggle priority)
    qrt (layer-toggle qwerty)
    qrtm (layer-toggle qwerty_with_modtap)

    to_bas (layer-switch base)
    to_dir (layer-switch directory)
    to_dirt (layer-switch directory_toggle)
    to_nf (layer-switch num_func)
    to_p1 (layer-switch priority)
    to_qrt (layer-switch qwerty)
    to_qrtm (layer-switch qwerty_with_modtap)

    on_bas (layer-add base)
    on_dir (layer-add directory)
    on_dirt (layer-add directory_toggle)
    on_nf (layer-add num_func)
    on_p1 (layer-add priority)
    on_qrt (layer-add qwerty)
    on_qrtm (layer-add qwerty_with_modtap)

    off_bas (layer-rem base)
    off_dir (layer-rem directory)
    off_dirt (layer-rem directory_toggle)
    off_nf (layer-rem num_func)
    off_p1 (layer-rem priority)
    off_qrt (layer-rem qwerty)
    off_qrtm (layer-rem qwerty_with_modtap)

    s_bas (sticky-key 500 @bas)
    s_dir (sticky-key 500 @dir)
    s_dirt (sticky-key 500 @dirt)
    s_nf (sticky-key 500 @nf)
    s_p1 (sticky-key 500 @p1)
    s_qrt (sticky-key 500 @qrt)
    s_qrtm (sticky-key 500 @qrtm)

    ;; -------------------------------------------------- 
    ;; define mod layer buttons
    ;; -------------------------------------------------- 

    on_a (layer-add l_a)
    on_ac (layer-add l_ac)
    on_acm (layer-add l_acm)
    on_am (layer-add l_am)
    on_ams (layer-add l_ams)
    on_as (layer-add l_as)
    on_c (layer-add l_c)
    on_cm (layer-add l_cm)
    on_cms (layer-add l_cms)
    on_cs (layer-add l_cs)
    on_hyp (layer-add l_hyp)
    on_m (layer-add l_m)
    on_meh (layer-add l_meh)
    on_ms (layer-add l_ms)
    on_s (layer-add l_s)

    off_a (layer-rem l_a)
    off_ac (layer-rem l_ac)
    off_acm (layer-rem l_acm)
    off_am (layer-rem l_am)
    off_ams (layer-rem l_ams)
    off_as (layer-rem l_as)
    off_c (layer-rem l_c)
    off_cm (layer-rem l_cm)
    off_cms (layer-rem l_cms)
    off_cs (layer-rem l_cs)
    off_hyp (layer-rem l_hyp)
    off_m (layer-rem l_m)
    off_meh (layer-rem l_meh)
    off_ms (layer-rem l_ms)
    off_s (layer-rem l_s)

    ;; on_sft (layer-add shifted)
    ;; off_sft (layer-rem shifted)

    ;; -------------------------------------------------- 
    ;; define qwerty mods for home-row
    ;; i want to be able to use the number keys when holding mods
    ;; i need the destination layer to have mod-tap because I want to be able to use multiple mods at the same time
    ;; -------------------------------------------------- 
    qm_a (around @qrtm lalt)
    qm_c (around @qrtm lctl)
    qm_m (around @qrtm lmet)
    qm_s (around @qrtm lsft)

    qm_ac (around @qm_c lalt)
    qm_am (around @qm_m lalt)
    qm_as (around @qm_s lalt)
    qm_cm (around @qm_c lmet)
    qm_cs (around @qm_s lctl)
    qm_ms (around @qm_s lmet)

    qm_acm (around @qm_ac lmet)
    qm_ams (around @qm_as lmet)
    qm_cms (around @qm_cs lmet)
    qm_meh (around @qm_cs lalt)

    qm_hyp (around @qm_meh lmet)

    ;; -------------------------------------------------- 
    ;; define qwerty mods for sticky keys
    ;; can't use qwerty_with_modtap because sticky keys don't play nice with multi-use buttons
    ;; -------------------------------------------------- 
    q_a (around lalt @qrt)
    q_c (around lctl @qrt)
    q_m (around lmet @qrt)
    q_s (around lsft @qrt)

    q_ac (around @q_c lalt)
    q_am (around @q_m lalt)
    q_as (around @q_s lalt)
    q_cm (around @q_c lmet)
    q_cs (around @q_s lctl)
    q_ms (around @q_s lmet)

    q_acm (around @q_ac lmet)
    q_ams (around @q_as lmet)
    q_cms (around @q_cs lmet)
    q_meh (around @q_cs lalt)

    q_hyp (around @q_meh lmet)

    ;; -------------------------------------------------- 
    ;; define sticky keys with qwerty layer
    ;; -------------------------------------------------- 
    s_a (sticky-key 500 @q_a)
    s_ac (sticky-key 500 @q_ac)
    s_acm (sticky-key 500 @q_acm)
    s_am (sticky-key 500 @q_am)
    s_ams (sticky-key 500 @q_ams)
    s_as (sticky-key 500 @q_as)
    s_c (sticky-key 500 @q_c)
    s_cm (sticky-key 500 @q_cm)
    s_cms (sticky-key 500 @q_cms)
    s_cs (sticky-key 500 @q_cs)
    s_hyp (sticky-key 500 @q_hyp)
    s_m (sticky-key 500 @q_m)
    s_meh (sticky-key 500 @q_meh)
    s_ms (sticky-key 500 @q_ms)
    s_s (sticky-key 500 @q_s)

    ;; -------------------------------------------------- 
    ;; autoshift keys
    ;; -------------------------------------------------- 
    as_grv (tap-hold-next-release 200 grv ~)
    as_1 (tap-hold-next-release 200 1 !)
    as_2 (tap-hold-next-release 200 2 @)
    as_3 (tap-hold-next-release 200 3 #)
    as_4 (tap-hold-next-release 200 4 $)
    as_5 (tap-hold-next-release 200 5 %)
    as_6 (tap-hold-next-release 200 6 ^)
    as_7 (tap-hold-next-release 200 7 &)
    as_8 (tap-hold-next-release 200 8 *)
    as_9 (tap-hold-next-release 200 9 S-9)
    as_0 (tap-hold-next-release 200 0 S-0)
    as_dash (tap-hold-next-release 200 - S--)
    as_eq (tap-hold-next-release 200 = +)

    as_ob (tap-hold-next-release 200 [ S-[)
    as_cb (tap-hold-next-release 200 ] S-])
    as_bs (tap-hold-next-release 200 \ |)

    as_' (tap-hold-next-release 200 ' ")

    as_, (tap-hold-next-release 200 , <)
    as_. (tap-hold-next-release 200 . >)
    as_slsh (tap-hold-next-release 200 / ?)

    ;; fake autoshift
    as_left (tap-hold-next-release 200 left home)
    as_down (tap-hold-next-release 200 down pgdn)
    as_up (tap-hold-next-release 200 up pgup)
    as_rght (tap-hold-next-release 200 rght end)

    ;; -------------------------------------------------- 
    ;; home-row mods / mod-tap using qwerty layer
    ;; -------------------------------------------------- 

    hyp_w (tap-hold 200 w @qm_hyp)
    meh_e (tap-hold 200 e @qm_meh)

    meh_i (tap-hold 200 i @qm_meh)
    hyp_o (tap-hold 200 o @qm_hyp)

    ctl_a (tap-hold 200 a @qm_c)
    alt_s (tap-hold 200 s @qm_a)
    met_d (tap-hold 200 d @qm_m)
    sft_f (tap-hold 200 f @qm_s)

    sft_j (tap-hold 200 j @qm_s)
    met_k (tap-hold 200 k @qm_m)
    alt_l (tap-hold 200 l @qm_a)
    ctl_; (tap-hold 200 ; @qm_c)

    ca_m (tap-hold 200 m @qm_ac)
    ca_v (tap-hold 200 v @qm_ac)
    ;; ca_c (tap-hold 200 c @qm_ac)

    ;; -------------------------------------------------- 
    ;; layer-tap
    ;; -------------------------------------------------- 
    ;; ret_dir (tap-hold 200 ret @s_dir)
    ;; esc_dir (tap-hold 200 esc @s_dir)

    spc_p1 (tap-hold-next-release 200 spc @p1)

    ;; -------------------------------------------------- 
    ;; multi-tap
    ;; -------------------------------------------------- 
    mt_sft (multi-tap 200 @off_s @on_s)
)

;; first defined layer is always the default layer
(deflayer base
  esc      brdn     brup     lp       mctl     bldn     blup     prev     pp       next     mute     vold     volu
  @as_grv  @as_1    @as_2    @as_3    @as_4    @as_5    @as_6    @as_7    @as_8    @as_9    @as_0    @as_dash @as_eq   bspc
  tab      q        @hyp_w   @meh_e   r        t        y        u        @meh_i   @hyp_o   p        @as_ob   @as_cb   @as_bs
  bspc     @ctl_a   @alt_s   @met_d   @sft_f   g        h        @sft_j   @met_k   @alt_l   @ctl_;   @as_'    ret
  @s_s     z        x        c        @ca_v    b        n        @ca_m    @as_,    @as_.    @as_slsh @s_dirt  up
  @on_p1   @s_p1    esc      @s_dir            @spc_p1           @s_dir   ret      left     down     rght
)

(deflayer qwerty
  _        _        _        _        _        _        _        _        _        _        _        _        _
  grv      1        2        3        4        5        6        7        8        9        0        -        =        _
  _        q        w        e        r        t        y        u        i        o        p        [        ]        \
  bspc     a        s        d        f        g        h        j        k        l        ;        '        _
  _        z        x        c        v        b        n        m        ,        .        /        _        _
  _        _        _        _                 spc               _        _        _        _        _
)

(deflayer qwerty_with_modtap
  _        _        _        _        _        _        _        _        _        _        _        _        _
  grv      1        2        3        4        5        6        7        8        9        0        -        =        _
  _        q        @hyp_w   @meh_e   r        t        y        u        @meh_i   @hyp_o   p        [        ]        \
  bspc     @ctl_a   @alt_s   @met_d   @sft_f   g        h        @sft_j   @met_k   @alt_l   @ctl_;   '        _
  _        z        x        c        @ca_v    b        n        @ca_m    ,        .        /        _        _
  _        _        _        _                 spc               _        _        _        _        _
)


(deflayer priority
  _        f1       f2       f3       f4       f5       f6       f7       f8       f9       f10      f11      f12
  S-grv    !        @        #        $        %        ^        &        *        S-9      S-0      S--      S-=      _
  _        _        home     pgup     pgdn     end      _        @as_7    @as_8    @as_9    _        S-[      S-]      S-\
  del      _        left     up       down     rght     _        @as_4    @as_5    @as_6    _        _        _
  _        _        _        _        _        _        _        @as_1    @as_2    @as_3    _        @off_p1  _
  _        @off_p1  _        _                 _                 @as_0    _        _        _        _
)

(deflayer directory
  _        f1       f2       f3       f4       f5       f6       f7       f8       f9       f10      f11      f12
  _        @s_acm   @s_ams   @s_cms   _        _        _        _        @s_cms   @s_ams   @s_acm   _        _        _
  esc      @s_cm    @s_hyp   @s_meh   @s_am    @s_nf    @s_nf    @s_am    @s_meh   @s_hyp   @s_cm    esc      _        _
  ret      @s_c     @s_a     @s_m     @s_s     @s_dirt  @s_dirt  @s_s     @s_m     @s_a     @s_c     ret      _
  _        @s_cs    @s_as    @s_ms    @s_ac    @s_p1    @s_p1    @s_ac    @s_ms    @s_as    @s_cs    _        _
  _        _        _        C-S-A-a           @s_p1             C-S-A-a  _        _        _        _
)

(deflayer directory_toggle
  _         _         _         _         _         _         _         _         _         _         _         _         _
  _         @on_acm   @on_ams   @on_cms   _         _         _         _         @on_cms   @on_ams   @on_acm   _         _         _
  _         @on_cm    @on_hyp   @on_meh   @on_am    @on_nf    @on_nf    @on_am    @on_meh   @on_hyp   @on_cm    _         _         _
  _         @on_c     @on_a     @on_m     @on_s     @on_bas   @on_bas   @on_s     @on_m     @on_a     @on_c     _         _
  _         @on_cs    @on_as    @on_ms    @on_ac    @on_p1    @on_p1    @on_ac    @on_ms    @on_as    @on_cs    _         _
  _         _         _         _                   _                   _         _         _         _         _
)

(deflayer num_func
  _        f1       f2       f3       f4       f5       f6       f7       f8       f9       f10      f11      f12
  _        1        2        3        4        5        6        7        8        9        0        _        _        _
  _        f1       f2       f3       f4       f5       f6       f7       f8       f9       f10      f11      f12      _
  _        1        2        3        4        5        6        7        8        9        0        _        _
  _        _        _        _        _        _        _        _        _        _        _        _        _
  _        _        _        _                 _                 _        _        _        _        _
)

;; -------------------------------------------------- 
;; define mod layers to get layer benefits like layer on
;; -------------------------------------------------- 
(deflayer l_s
  S-esc    S-f1     S-f2     S-f3     S-f4     S-f5     S-f6     S-f7     S-f8     S-f9     S-f10    S-f11    S-f12
  S-grv    S-1      S-2      S-3      S-4      S-5      S-6      S-7      S-8      S-9      S-0      S--      S-=      S-bspc
  S-tab    S-q      S-w      S-e      S-r      S-t      S-y      S-u      S-i      S-o      S-p      S-[      S-]      S-\
  S-bspc   S-a      S-s      S-d      S-f      S-g      S-h      S-j      S-k      S-l      S-;      S-'      S-ret
  @mt_sft  S-z      S-x      S-c      S-v      S-b      S-n      S-m      S-,      S-.      S-/      @off_s   _
  _        _        @off_s   _                 S-spc             _        @off_s   _        _        _
)

(deflayer l_c
  C-esc    C-f1     C-f2     C-f3     C-f4     C-f5     C-f6     C-f7     C-f8     C-f9     C-f10    C-f11    C-f12
  C-grv    C-1      C-2      C-3      C-4      C-5      C-6      C-7      C-8      C-9      C-0      C--      C-=      C-bspc
  C-tab    C-q      C-w      C-e      C-r      C-t      C-y      C-u      C-i      C-o      C-p      C-[      C-]      C-\
  C-bspc   C-a      C-s      C-d      C-f      C-g      C-h      C-j      C-k      C-l      C-;      C-'      C-ret
  _        C-z      C-x      C-c      C-v      C-b      C-n      C-m      C-,      C-.      C-/      @off_c   _
  _        _        @off_c   _                 C-spc             _        @off_c   _        _        _
)

(deflayer l_m
  M-esc    M-f1     M-f2     M-f3     M-f4     M-f5     M-f6     M-f7     M-f8     M-f9     M-f10    M-f11    M-f12
  M-grv    M-1      M-2      M-3      M-4      M-5      M-6      M-7      M-8      M-9      M-0      M--      M-=      M-bspc
  M-tab    M-q      M-w      M-e      M-r      M-t      M-y      M-u      M-i      M-o      M-p      M-[      M-]      M-\
  M-bspc   M-a      M-s      M-d      M-f      M-g      M-h      M-j      M-k      M-l      M-;      M-'      M-ret
  _        M-z      M-x      M-c      M-v      M-b      M-n      M-m      M-,      M-.      M-/      @off_m   _
  _        _        @off_m   _                 M-spc             _        @off_m   _        _        _
)

(deflayer l_a
  A-esc    A-f1     A-f2     A-f3     A-f4     A-f5     A-f6     A-f7     A-f8     A-f9     A-f10    A-f11    A-f12
  A-grv    A-1      A-2      A-3      A-4      A-5      A-6      A-7      A-8      A-9      A-0      A--      A-=      A-bspc
  A-tab    A-q      A-w      A-e      A-r      A-t      A-y      A-u      A-i      A-o      A-p      A-[      A-]      A-\
  A-bspc   A-a      A-s      A-d      A-f      A-g      A-h      A-j      A-k      A-l      A-;      A-'      A-ret
  _        A-z      A-x      A-c      A-v      A-b      A-n      A-m      A-,      A-.      A-/      @off_a   _
  _        _        @off_a   _                 A-spc             _        @off_a   _        _        _
)

(deflayer l_cs
  S-C-esc    S-C-f1     S-C-f2     S-C-f3     S-C-f4     S-C-f5     S-C-f6     S-C-f7     S-C-f8     S-C-f9     S-C-f10    S-C-f11    S-C-f12
  S-C-grv    S-C-1      S-C-2      S-C-3      S-C-4      S-C-5      S-C-6      S-C-7      S-C-8      S-C-9      S-C-0      S-C--      S-C-=      S-C-bspc
  S-C-tab    S-C-q      S-C-w      S-C-e      S-C-r      S-C-t      S-C-y      S-C-u      S-C-i      S-C-o      S-C-p      S-C-[      S-C-]      S-C-\
  S-C-bspc   S-C-a      S-C-s      S-C-d      S-C-f      S-C-g      S-C-h      S-C-j      S-C-k      S-C-l      S-C-;      S-C-'      S-C-ret
  _          S-C-z      S-C-x      S-C-c      S-C-v      S-C-b      S-C-n      S-C-m      S-C-,      S-C-.      S-C-/      @off_cs    _
  _          _          @off_cs    _                     S-C-spc               _          @off_cs    _          _          _
)

(deflayer l_ms
  S-M-esc    S-M-f1     S-M-f2     S-M-f3     S-M-f4     S-M-f5     S-M-f6     S-M-f7     S-M-f8     S-M-f9     S-M-f10    S-M-f11    S-M-f12
  S-M-grv    S-M-1      S-M-2      S-M-3      S-M-4      S-M-5      S-M-6      S-M-7      S-M-8      S-M-9      S-M-0      S-M--      S-M-=      S-M-bspc
  S-M-tab    S-M-q      S-M-w      S-M-e      S-M-r      S-M-t      S-M-y      S-M-u      S-M-i      S-M-o      S-M-p      S-M-[      S-M-]      S-M-\
  S-M-bspc   S-M-a      S-M-s      S-M-d      S-M-f      S-M-g      S-M-h      S-M-j      S-M-k      S-M-l      S-M-;      S-M-'      S-M-ret
  _          S-M-z      S-M-x      S-M-c      S-M-v      S-M-b      S-M-n      S-M-m      S-M-,      S-M-.      S-M-/      @off_ms    _
  _          _          @off_ms    _                     S-M-spc               _          @off_ms    _          _          _
)

(deflayer l_as
  S-A-esc    S-A-f1     S-A-f2     S-A-f3     S-A-f4     S-A-f5     S-A-f6     S-A-f7     S-A-f8     S-A-f9     S-A-f10    S-A-f11    S-A-f12
  S-A-grv    S-A-1      S-A-2      S-A-3      S-A-4      S-A-5      S-A-6      S-A-7      S-A-8      S-A-9      S-A-0      S-A--      S-A-=      S-A-bspc
  S-A-tab    S-A-q      S-A-w      S-A-e      S-A-r      S-A-t      S-A-y      S-A-u      S-A-i      S-A-o      S-A-p      S-A-[      S-A-]      S-A-\
  S-A-bspc   S-A-a      S-A-s      S-A-d      S-A-f      S-A-g      S-A-h      S-A-j      S-A-k      S-A-l      S-A-;      S-A-'      S-A-ret
  _          S-A-z      S-A-x      S-A-c      S-A-v      S-A-b      S-A-n      S-A-m      S-A-,      S-A-.      S-A-/      @off_as    _
  _          _          @off_as    _                     S-A-spc               _          @off_as    _          _          _
)

(deflayer l_ac
  C-A-esc    C-A-f1     C-A-f2     C-A-f3     C-A-f4     C-A-f5     C-A-f6     C-A-f7     C-A-f8     C-A-f9     C-A-f10    C-A-f11    C-A-f12
  C-A-grv    C-A-1      C-A-2      C-A-3      C-A-4      C-A-5      C-A-6      C-A-7      C-A-8      C-A-9      C-A-0      C-A--      C-A-=      C-A-bspc
  C-A-tab    C-A-q      C-A-w      C-A-e      C-A-r      C-A-t      C-A-y      C-A-u      C-A-i      C-A-o      C-A-p      C-A-[      C-A-]      C-A-\
  C-A-bspc   C-A-a      C-A-s      C-A-d      C-A-f      C-A-g      C-A-h      C-A-j      C-A-k      C-A-l      C-A-;      C-A-'      C-A-ret
  _          C-A-z      C-A-x      C-A-c      C-A-v      C-A-b      C-A-n      C-A-m      C-A-,      C-A-.      C-A-/      @off_ac    _
  _          _          @off_ac    _                     C-A-spc               _          @off_ac    _          _          _
)

(deflayer l_cm
  C-M-esc    C-M-f1     C-M-f2     C-M-f3     C-M-f4     C-M-f5     C-M-f6     C-M-f7     C-M-f8     C-M-f9     C-M-f10    C-M-f11    C-M-f12
  C-M-grv    C-M-1      C-M-2      C-M-3      C-M-4      C-M-5      C-M-6      C-M-7      C-M-8      C-M-9      C-M-0      C-M--      C-M-=      C-M-bspc
  C-M-tab    C-M-q      C-M-w      C-M-e      C-M-r      C-M-t      C-M-y      C-M-u      C-M-i      C-M-o      C-M-p      C-M-[      C-M-]      C-M-\
  C-M-bspc   C-M-a      C-M-s      C-M-d      C-M-f      C-M-g      C-M-h      C-M-j      C-M-k      C-M-l      C-M-;      C-M-'      C-M-ret
  _          C-M-z      C-M-x      C-M-c      C-M-v      C-M-b      C-M-n      C-M-m      C-M-,      C-M-.      C-M-/      @off_cm    _
  _          _          @off_cm    _                     C-M-spc               _          @off_cm    _          _          _
)

(deflayer l_am
  M-A-esc    M-A-f1     M-A-f2     M-A-f3     M-A-f4     M-A-f5     M-A-f6     M-A-f7     M-A-f8     M-A-f9     M-A-f10    M-A-f11    M-A-f12
  M-A-grv    M-A-1      M-A-2      M-A-3      M-A-4      M-A-5      M-A-6      M-A-7      M-A-8      M-A-9      M-A-0      M-A--      M-A-=      M-A-bspc
  M-A-tab    M-A-q      M-A-w      M-A-e      M-A-r      M-A-t      M-A-y      M-A-u      M-A-i      M-A-o      M-A-p      M-A-[      M-A-]      M-A-\
  M-A-bspc   M-A-a      M-A-s      M-A-d      M-A-f      M-A-g      M-A-h      M-A-j      M-A-k      M-A-l      M-A-;      M-A-'      M-A-ret
  _          M-A-z      M-A-x      M-A-c      M-A-v      M-A-b      M-A-n      M-A-m      M-A-,      M-A-.      M-A-/      @off_am    _
  _          _          @off_am    _                     M-A-spc               _          @off_am    _          _          _
)

(deflayer l_acm
  C-A-M-esc    C-A-M-f1     C-A-M-f2     C-A-M-f3     C-A-M-f4     C-A-M-f5     C-A-M-f6     C-A-M-f7     C-A-M-f8     C-A-M-f9     C-A-M-f10    C-A-M-f11    C-A-M-f12
  C-A-M-grv    C-A-M-1      C-A-M-2      C-A-M-3      C-A-M-4      C-A-M-5      C-A-M-6      C-A-M-7      C-A-M-8      C-A-M-9      C-A-M-0      C-A-M--      C-A-M-=      C-A-M-bspc
  C-A-M-tab    C-A-M-q      C-A-M-w      C-A-M-e      C-A-M-r      C-A-M-t      C-A-M-y      C-A-M-u      C-A-M-i      C-A-M-o      C-A-M-p      C-A-M-[      C-A-M-]      C-A-M-\
  C-A-M-bspc   C-A-M-a      C-A-M-s      C-A-M-d      C-A-M-f      C-A-M-g      C-A-M-h      C-A-M-j      C-A-M-k      C-A-M-l      C-A-M-;      C-A-M-'      C-A-M-ret
  _            C-A-M-z      C-A-M-x      C-A-M-c      C-A-M-v      C-A-M-b      C-A-M-n      C-A-M-m      C-A-M-,      C-A-M-.      C-A-M-/      @off_acm     _
  _            _            @off_acm     _                         C-A-M-spc                 _            @off_acm     _            _            _
)

(deflayer l_cms
  S-C-M-esc    S-C-M-f1     S-C-M-f2     S-C-M-f3     S-C-M-f4     S-C-M-f5     S-C-M-f6     S-C-M-f7     S-C-M-f8     S-C-M-f9     S-C-M-f10    S-C-M-f11    S-C-M-f12
  S-C-M-grv    S-C-M-1      S-C-M-2      S-C-M-3      S-C-M-4      S-C-M-5      S-C-M-6      S-C-M-7      S-C-M-8      S-C-M-9      S-C-M-0      S-C-M--      S-C-M-=      S-C-M-bspc
  S-C-M-tab    S-C-M-q      S-C-M-w      S-C-M-e      S-C-M-r      S-C-M-t      S-C-M-y      S-C-M-u      S-C-M-i      S-C-M-o      S-C-M-p      S-C-M-[      S-C-M-]      S-C-M-\
  S-C-M-bspc   S-C-M-a      S-C-M-s      S-C-M-d      S-C-M-f      S-C-M-g      S-C-M-h      S-C-M-j      S-C-M-k      S-C-M-l      S-C-M-;      S-C-M-'      S-C-M-ret
  _            S-C-M-z      S-C-M-x      S-C-M-c      S-C-M-v      S-C-M-b      S-C-M-n      S-C-M-m      S-C-M-,      S-C-M-.      S-C-M-/      @off_cms     _
  _            _            @off_cms     _                         S-C-M-spc                 _            @off_cms     _            _            _
)

(deflayer l_ams
  S-A-M-esc    S-A-M-f1     S-A-M-f2     S-A-M-f3     S-A-M-f4     S-A-M-f5     S-A-M-f6     S-A-M-f7     S-A-M-f8     S-A-M-f9     S-A-M-f10    S-A-M-f11    S-A-M-f12
  S-A-M-grv    S-A-M-1      S-A-M-2      S-A-M-3      S-A-M-4      S-A-M-5      S-A-M-6      S-A-M-7      S-A-M-8      S-A-M-9      S-A-M-0      S-A-M--      S-A-M-=      S-A-M-bspc
  S-A-M-tab    S-A-M-q      S-A-M-w      S-A-M-e      S-A-M-r      S-A-M-t      S-A-M-y      S-A-M-u      S-A-M-i      S-A-M-o      S-A-M-p      S-A-M-[      S-A-M-]      S-A-M-\
  S-A-M-bspc   S-A-M-a      S-A-M-s      S-A-M-d      S-A-M-f      S-A-M-g      S-A-M-h      S-A-M-j      S-A-M-k      S-A-M-l      S-A-M-;      S-A-M-'      S-A-M-ret
  _            S-A-M-z      S-A-M-x      S-A-M-c      S-A-M-v      S-A-M-b      S-A-M-n      S-A-M-m      S-A-M-,      S-A-M-.      S-A-M-/      @off_ams     _
  _            _            @off_ams     _                         S-A-M-spc                 _            @off_ams     _            _            _
)

(deflayer l_meh
  C-S-A-esc    C-S-A-f1     C-S-A-f2     C-S-A-f3     C-S-A-f4     C-S-A-f5     C-S-A-f6     C-S-A-f7     C-S-A-f8     C-S-A-f9     C-S-A-f10    C-S-A-f11    C-S-A-f12
  C-S-A-grv    C-S-A-1      C-S-A-2      C-S-A-3      C-S-A-4      C-S-A-5      C-S-A-6      C-S-A-7      C-S-A-8      C-S-A-9      C-S-A-0      C-S-A--      C-S-A-=      C-S-A-bspc
  C-S-A-tab    C-S-A-q      C-S-A-w      C-S-A-e      C-S-A-r      C-S-A-t      C-S-A-y      C-S-A-u      C-S-A-i      C-S-A-o      C-S-A-p      C-S-A-[      C-S-A-]      C-S-A-\
  C-S-A-bspc   C-S-A-a      C-S-A-s      C-S-A-d      C-S-A-f      C-S-A-g      C-S-A-h      C-S-A-j      C-S-A-k      C-S-A-l      C-S-A-;      C-S-A-'      C-S-A-ret
  _            C-S-A-z      C-S-A-x      C-S-A-c      C-S-A-v      C-S-A-b      C-S-A-n      C-S-A-m      C-S-A-,      C-S-A-.      C-S-A-/      @off_meh     _
  _            _            @off_meh     _                         C-S-A-spc                 _            @off_meh     _            _            _
)

(deflayer l_hyp
  M-C-S-A-esc    M-C-S-A-f1     M-C-S-A-f2     M-C-S-A-f3     M-C-S-A-f4     M-C-S-A-f5     M-C-S-A-f6     M-C-S-A-f7     M-C-S-A-f8     M-C-S-A-f9     M-C-S-A-f10    M-C-S-A-f11    M-C-S-A-f12
  M-C-S-A-grv    M-C-S-A-1      M-C-S-A-2      M-C-S-A-3      M-C-S-A-4      M-C-S-A-5      M-C-S-A-6      M-C-S-A-7      M-C-S-A-8      M-C-S-A-9      M-C-S-A-0      M-C-S-A--      M-C-S-A-=      M-C-S-A-bspc
  M-C-S-A-tab    M-C-S-A-q      M-C-S-A-w      M-C-S-A-e      M-C-S-A-r      M-C-S-A-t      M-C-S-A-y      M-C-S-A-u      M-C-S-A-i      M-C-S-A-o      M-C-S-A-p      M-C-S-A-[      M-C-S-A-]      M-C-S-A-\
  M-C-S-A-bspc   M-C-S-A-a      M-C-S-A-s      M-C-S-A-d      M-C-S-A-f      M-C-S-A-g      M-C-S-A-h      M-C-S-A-j      M-C-S-A-k      M-C-S-A-l      M-C-S-A-;      M-C-S-A-'      M-C-S-A-ret
  _              M-C-S-A-z      M-C-S-A-x      M-C-S-A-c      M-C-S-A-v      M-C-S-A-b      M-C-S-A-n      M-C-S-A-m      M-C-S-A-,      M-C-S-A-.      M-C-S-A-/      @off_hyp       _
  _              _              @off_hyp       _                             M-C-S-A-spc                   _              @off_hyp       _              _              _
)

(deflayer blank_dont_use
  _        _        _        _        _        _        _        _        _        _        _        _        _
  _        _        _        _        _        _        _        _        _        _        _        _        _        _
  _        _        _        _        _        _        _        _        _        _        _        _        _        _
  _        _        _        _        _        _        _        _        _        _        _        _        _
  _        _        _        _        _        _        _        _        _        _        _        _        _
  _        _        _        _                 _                 _        _        _        _        _
)

set -g mouse on
set -g escape-time 0

set -g renumber-windows on
set -g base-index 1

set -g set-titles on

set -g status-keys vi
set -gw mode-keys vi

set -g history-limit 10000

set -g prefix C-Space
# hit it twice to send C-space to the terminal
bind C-Space send-prefix

set -g default-terminal "tmux-256color"
set-option -sa terminal-features "*:RGB" # true color support

# :checkhealth in neovim suggests below
set -g focus-events on

# https://schauderbasis.de/posts/hide_tmux_status_bar_if_its_not_needed/
# only show status bar if there is more then one window
set -g status off
set-hook -g after-new-window      'if "[ #{session_windows} -gt 1 ]" "set status on"'
set-hook -g after-kill-pane       'if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g pane-exited           'if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g window-layout-changed 'if "[ #{session_windows} -lt 2 ]" "set status off"'

bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy'
bind -T copy-mode-vi v send -X begin-selection

bind-key -T copy-mode-vi 'M-m' select-pane -L
bind-key -T copy-mode-vi 'M-n' select-pane -D
bind-key -T copy-mode-vi 'M-e' select-pane -U
bind-key -T copy-mode-vi 'M-i' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# bind -n means skip prefix
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9
bind -n M-0 select-window -t :0

bind -n M-t new-window

bind -n M-u previous-window
bind -n M-y next-window

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-m if-shell "$is_vim" 'send-keys M-m' 'select-pane -L'
bind-key -n M-n if-shell "$is_vim" 'send-keys M-n' 'select-pane -D'
bind-key -n M-e if-shell "$is_vim" 'send-keys M-e' 'select-pane -U'
bind-key -n M-i if-shell "$is_vim" 'send-keys M-i' 'select-pane -R'

bind -n M-x kill-pane
bind -n M-w kill-window
bind -n M-q kill-session

bind -n M-U switch-client -p
bind -n M-Y switch-client -n

bind -n M-R source-file ~/.tmux.conf

# swap panes
bind -n M-M run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind -n M-N run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind -n M-E run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind -n M-I run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'

bind -n M-< swap-window -t -1
bind -n M-> swap-window -t +1

bind -n M-| split-window -h
bind -n M-- split-window -v

bind-key -n M-C-m if-shell "$is_vim" 'send-keys M-C-m' 'resize-pane -L 3'
bind-key -n M-C-n if-shell "$is_vim" 'send-keys M-C-n' 'resize-pane -D 3'
bind-key -n M-C-e if-shell "$is_vim" 'send-keys M-C-e' 'resize-pane -U 3'
bind-key -n M-C-i if-shell "$is_vim" 'send-keys M-C-i' 'resize-pane -R 3'

# use telescope-tmux for picking sessions and windows 
# bind -n M-s display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux sessions quit_on_select=true"
# bind -n M-w display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux windows quit_on_select=true"

# bind -r means key can be repeated without prefix
bind -r M resize-pane -L 5
bind -r N resize-pane -D 5
bind -r E resize-pane -U 5
bind -r I resize-pane -R 5

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

set -g @easy-motion-prefix "Space"
set -g @easy-motion-default-motion "bd-w"

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'IngoMeyer441/tmux-easy-motion'

run '~/.tmux/plugins/tpm/tpm'


Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tommcdo/vim-exchange'

let mapleader = " "

set ignorecase
set smartcase

set showmode

set scrolloff=3

set incsearch
set hlsearch

" set number
" set relativenumber

set surround
set commentary
set exchange
set sneak
set quickscope

set visualbell
" todo this setting doesn't exist
" set noerrorbells

sethandler a:vim

map Y y$
map K :action QuickJavaDoc<cr>

map <leader>y "+y
map <leader>p "+p

nmap <C-d> <C-d>zz
nmap <C-u> <C-u>zz

noremap <leader>r :action ReformatCode<cr>

" insert one character and then go back to normal mode
nnoremap <leader>a i_<Esc>r
nnoremap <leader>h <c-w>h
nnoremap <leader>l <c-w>l
nnoremap <leader>j <c-w>j
nnoremap <leader>k <c-w>k
" nnoremap <leader>k :action EditorSplitLine<cr>
nnoremap <leader>/ :nohls<cr>
nnoremap <leader>u :action FileStructurePopup<cr>
nnoremap <leader>m :action MaximizeEditorInSplit<cr>
nnoremap <leader>z :action ToggleDistractionFreeMode<cr>
nnoremap <leader>Z :action ToggleZenMode<cr>
nnoremap <leader>w :action HideAllWindows<cr>
nnoremap <leader>x :action CloseContent<cr>
nnoremap <leader><esc> :action JumpToLastWindow<cr>
nnoremap <leader>, :action MoveEditorToOppositeTabGroup<cr>
nnoremap <leader>b :action RecentFiles<cr>

nnoremap <leader><leader>r :action RenameElement<cr>

noremap gc :action CommentByLineComment<cr>

nnoremap gd :action GotoDeclaration<cr>
nnoremap gr :action FindUsages<cr>
nnoremap gs :action GotoSymbol<cr>
nnoremap ga :action GotoAction<cr>
nnoremap gh :action ShowErrorDescription<cr>
nnoremap g; :action JumpToLastChange<cr>
nnoremap g, :action JumpToNextChange<cr>

nnoremap <leader>ff :action GotoFile<cr>
" live grep
nnoremap <leader>fg :action FindInPath<cr>
" nnoremap <leader>fb :action ShowBookmarks<cr>
nnoremap <leader>fc :action GotoClass<cr>
nnoremap <leader>ft :action GotoTest<cr>
nnoremap <leader>fb :action RecentFiles<cr>
nnoremap <leader>fl :action RecentLocations<cr>

nnoremap <leader>gp :action PinActiveEditorTab<cr>
nnoremap <leader>gx :action CloseAllUnpinnedEditors<cr>
nnoremap <leader>gX :action CloseAllEditors<cr>
nnoremap <leader>go :action CloseAllEditorsButActive<cr>
nnoremap <leader>gu :action LocalHistory.ShowHistory<cr>
" git blame
nnoremap <leader>gb :action Annotate<cr>
nnoremap <leader>gi :action ReSharperGotoImplementation<cr>
nnoremap <leader>gh :action Refactorings.QuickListPopupAction<cr>
" add new file to directory of current file
nnoremap <leader>gf :action NewElementSamePlace<cr>

nnoremap <leader>ic :source ~/.ideavimrc<cr>
nnoremap <leader>iw :action EditSourceInNewWindow<cr>
nnoremap <leader>ia :action VimFindActionIdAction<cr>
nnoremap <leader>im :action ToggleBookmark<cr>
nnoremap <leader>id :action RestartIde<cr>
" change theme
nnoremap <leader>it :action ChangeLaf<cr>
" toggle navbar
nnoremap <leader>in :action ViewObsoleteNavBarAction<cr>
nnoremap <leader>ib :action ViewToolButtons<cr>
" reload file from disk
nnoremap <leader>ir :action SynchronizeCurrentFile<cr>
nnoremap <leader>iv :action ActivateUnitTestsCoverageToolWindow<cr>
nnoremap <leader>iu :action ActivateUnitTestsToolWindow<cr>
nnoremap <leader>io :action RiderManageRecentProjects<cr>

"debug / run namespace
noremap \e :action QuickEvaluateExpression<cr>
noremap \E :action EvaluateExpression<cr>

nnoremap \c :action RunToCursor<cr>
nnoremap \C :action ForceRunToCursor<cr>
nnoremap \. :action ShowExecutionPoint<cr>
nnoremap \p :action Pause<cr>
nnoremap \P :action Play<cr>
nnoremap \q :action Stop<cr>
nnoremap \d :action RiderUnitTestDebugContextAction<cr>
nnoremap \D :action Debug<cr>
nnoremap \r :action RiderUnitTestRepeatPreviousRunAction<cr>
nnoremap \R :action Run<cr>
nnoremap \b :action ToggleLineBreakpoint<cr>
nnoremap \t :action RiderUnitTestRunContextSplitAction<cr>
" maps to just 2 backslashes - I guess when it's just one it doesn't escape
" but when its 2 it does so you need 4???
nnoremap \\\\x :action Debugger.RemoveAllBreakpoints<cr>
nnoremap \\\\m :action XDebugger.MuteBreakpoints<cr>
nnoremap \\\\b :action BuildWholeSolutionAction<cr>
nnoremap \\\\B :action RebuildSolutionAction<cr>
nnoremap \\\\r :action Rerun<cr>

nmap <C-o> <Action>(Back)<cr>
nmap <C-i> <Action>(Forward)<cr>

nnoremap [m :tabm-1<cr>
nnoremap ]m :tabm+1<cr>
nnoremap [b :bprevious<cr>
nnoremap ]b :bnext<cr>
nnoremap [t :action PreviousTab<cr>
nnoremap ]t :action NextTab<cr>
nnoremap [[ :action MethodUp<cr>
nnoremap ]] :action MethodDown<cr>
nnoremap ]e :action GotoNextError<cr>

nnoremap [e :action GotoPreviousError<cr>
" https://vim.fandom.com/wiki/Quickly_adding_and_deleting_empty_lines
" context mark doesn't work in ideavim so use z
nnoremap ]<space> mzo<esc>`z
nnoremap [<space> mzO<esc>`z
nnoremap [d mz:-d<cr>`z
nnoremap ]d mz:+d<cr>`z
nnoremap ]c :action VcsShowNextChangeMarker<cr>
nnoremap [c :action VcsShowPrevChangeMarker<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CHOPPING BLOCK "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"nnoremap <leader>ir :action ChooseRunConfiguration<cr>
"nnoremap <leader>ip :action PasteMultiple<cr>

